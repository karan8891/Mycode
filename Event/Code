import base64
import json
import requests

def main(event, context):
    if 'data' not in event:
        raise ValueError("Missing Pub/Sub message")

    pubsub_data = base64.b64decode(event['data']).decode('utf-8')
    gcs_event = json.loads(pubsub_data)

    # Extract details from GCS notification
    bucket = gcs_event.get("bucket")
    object_name = gcs_event.get("name") or gcs_event.get("object")
    project_id = gcs_event.get("projectId", "sandbox-corp-apmf-<your-suffix>")

    # Add any static or dynamic enrichment here
    payload = {
        "bucket": bucket,
        "object": object_name,
        "project_id": project_id,
        "delete_after_transfer": True  # or False if default
    }

    gdw_cf_url = "https://REGION-PROJECT.cloudfunctions.net/gdw-trigger-function"  # Replace with GDW CF URL

    # Auth header - for internal GCP calls, often this works (no token needed), but safer with ID token
    headers = {
        "Content-Type": "application/json"
    }

    response = requests.post(gdw_cf_url, json=payload, headers=headers)
    if response.status_code not in [200, 201]:
        raise RuntimeError(f"Failed to invoke GDW CF: {response.status_code} - {response.text}")

    print("Successfully triggered GDW CF")
